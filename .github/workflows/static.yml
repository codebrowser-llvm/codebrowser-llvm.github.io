# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Fetch codebrowser HTML files archives
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: 'Enna1/llvm-codebrowser'
          regex: true
          file: "llvm-.*\\.gz"
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract codebrowser HTML files
        run: |
          mkdir public-html
          for tar in $(find . -name '*.tar.gz'); do tar xf $tar --directory=public-html; done
          pushd public-html
          tree -d -H '.' -L 1 --noreport -T 'Code Browser for LLVM' --charset utf-8 -I "index.html" -I "data" -o index.html
          popd
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './public-html'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
